[
  {
    "id": "ConsonantQualitySize",
    "name": "consonant quality size",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "consonant_quality_size",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "VowelQualitySize",
    "name": "vowel quality size",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "vowel_quality_size",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "VowelSize",
    "name": "vowel size",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "vowel_size",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "ConsonantSize",
    "name": "consonant size",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "consonant_size",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "CVRatio",
    "name": "consonant and vowel ratio",
    "type": "float",
    "module": "cltoolkit.features.phonology",
    "function": "cv_ratio",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "CVQualityRatio",
    "name": "consonant and vowel ratio (by quality)",
    "type": "float",
    "module": "cltoolkit.features.phonology",
    "function": "cv_quality_ratio",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "CVSoundRatio",
    "name": "consonant and vowel ratio (including diphthongs and clusters)",
    "type": "float",
    "module": "cltoolkit.features.phonology",
    "function": "cv_sounds_ratio",
    "note": "",
    "requires": "inventory"
  },
  {
    "id": "HasNasalVowels",
    "name": "has nasal vowels or not",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "has_nasal_vowels",
    "categories": {
      "true": "has nasal vowels",
      "false": "does not have nasal vowels"
    },
    "note": "same as: WALS 10A",
    "requires": "inventory"
  },
  {
    "id": "HasRoundedVowels",
    "name": "has rounded vowels or not",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "has_rounded_vowels",
    "note": "same as: WALS 11A",
    "categories": {
      "1": "no high and no mid vowels",
      "2": "high and mid vowels",
      "3": "high and no mid vowels",
      "4": "mid and no high vowels"
    },
    "requires": "inventory"
  },
  {
    "id": "VelarNasal",
    "name": "has the velar nasal (engma)",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "has_engma",
    "note": "same as: WALS 9A",
    "categories": {
      "1": "velar nasal occurs in syllable-initial position",
      "2": "velar nasal occurs but not in syllable-initial position",
      "3": "velar nasal is missing"
    },
    "requires": "wordlist with tokens"
  },
  {
    "id": "PlosiveVoicingGaps",
    "name": "voicing and gaps in plosives",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "has_ptk",
    "note": "same as: WALS 5A",
    "categories": {
      "1": "no p and no g in the inventory",
      "2": "no g in the inventory",
      "3": "no p in the inventory",
      "4": "has less than 6 values of [p t t̪ k b d d̪ g]",
      "5": "has at least 6 values of [p t t̪ k b d d̪ g]"
    },
    "requires": "inventory"
  },
  {
    "id": "LacksCommonConsonants",
    "name": "gaps in plosives",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "lacks_common_consonants",
    "note": "same as: WALS 18A",
    "categories": {
      "1": "bilabials and fricatives and nasals occur",
      "2": "bilabials do not occur, fricatives and nasals occur",
      "3": "fricatives do not occur, bilabials and nasals occur",
      "4": "nasals do not occur, bilabials and fricatives occur",
      "5": "bilabials and nasals do not occur, fricatives occur",
      "6": "all other cases"
    },
    "requires": "inventory"
  },
  {
    "id": "HasUncommonConsonants",
    "name": "has uncommon consonants",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "has_uncommon_consonants",
    "note": "same as: WALS 19A",
    "categories": {
      "1": "no clicsk and no dental fricatives and no labiovelars and no pharyngeals",
      "2": "clicks and pharyngeals and dental fricatives",
      "3": "pharyngeals and dental fricatives",
      "4": "dentral fricatives",
      "5": "pharyngeals",
      "6": "labiovelars",
      "7": "clicks"
    },
    "requires": "inventory"
  },
  {
    "id": "LegAndFoot",
    "name": "has the same word form for foot and leg",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_leg_and_foot_colexified",
    "note": "",
    "categories": {
      "true": "colexifies foot and leg",
      "false": "does not colexify foot and leg",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "PlosiveFricativeVoicing",
    "name": "voicing in plosives and fricatives",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "plosive_fricative_voicing",
    "note": "same as: WALS 4A",
    "requires": "inventory"
  },
  {
    "id": "UvularConsonants",
    "name": "presence of uvular consonants",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "has_uvular",
    "note": "same as: WALS 6A",
    "requires": "inventory"
  },
  {
    "id": "GlottalizedConsonants",
    "name": "presence of glottalized consonants",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "has_glottalized",
    "note": "same as: WALS 7A",
    "requires": "inventory"
  },
  {
    "id": "HasLaterals",
    "name": "presence of glottalized consonants",
    "type": "integer",
    "module": "cltoolkit.features.phonology",
    "function": "has_laterals",
    "note": "same as: WALS 8A",
    "requires": "inventory"
  },
  {
    "id": "SyllableStructure",
    "name": "complexity of the syllable structure",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "syllable_structure",
    "note": "same as: WALS 12A",
    "categories": {
      "1": "simple syllable structure (only CV attested)",
      "2": "moderately complex syllable structure (C(C)VC attested)",
      "3": "complex syllable structure"
    },
    "requires": "wordlist with tokens"
  },
  {
    "id": "ArmAndHand",
    "name": "arm and hand distinguished or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_arm_and_hand_colexified",
    "note": "same as: WALS 129A, APICS 112",
    "categories": {
      "true": "colexifies arm and hand",
      "false": "does not colexify arm and hand",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "BarkAndSkin",
    "name": "bark and skin distinguished or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_bark_and_skin_colexified",
    "note": "",
    "categories": {
      "true": "colexifies arm and hand",
      "false": "does not colexify arm and hand",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "FingerAndHand",
    "name": "finger andhand distinguished or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_finger_and_hand_colexified",
    "note": "same as: WALS 130A",
    "categories": {
      "true": "colexifies finger and hand",
      "false": "does not colexify finger and hand",
      "null": "missing data" 
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "GreenAndBlue",
    "name": "green and blue colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_green_and_blue_colexified",
    "note": "similar to: APICS 116, WALS 134A",
    "categories": {
      "true": "colexifies green and blue",
      "false": "does not colexify green and blue",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "RedAndYellow",
    "name": "red and yellow colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_red_and_yellow_colexified",
    "note": "similar to: WALS 135A",
    "categories": {
      "true": "colexifies red and yellow",
      "false": "does not colexify red and yellow",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "ToeAndFoot",
    "name": "toe and foot colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_toe_and_foot_colexified",
    "note": "",
    "categories": {
      "true": "colexifies toe and foot",
      "false": "does not colexify red toe and foot",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "SeeAndKnow",
    "name": "see and know colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_see_and_know_colexified",
    "note": "",
    "categories": {
      "true": "colexifies see and know",
      "false": "does not colexify red see and know",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "SeeAndUnderstand",
    "name": "see and understand colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_see_and_understand_colexified",
    "note": "",
    "categories": {
      "true": "colexifies see and understand",
      "false": "does not colexify red see and understand",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "ElbowAndKnee",
    "name": "elbow and knee colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_elbow_and_knee_colexified",
    "note": "",
    "categories": {
      "true": "colexifies elbow and knee",
      "false": "does not colexify red elbow and knee",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "FearAndSurprise",
    "name": "fear and surprise colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_fear_and_surprise_colexified",
    "note": "",
    "categories": {
      "true": "colexifies fear and surprise",
      "false": "does not colexify red fear and surprise",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "CommonSubstringInElbowAndKnee",
    "name": "elbow and knee are partially colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "common_substring_in_elbow_and_knee",
    "note": "",
    "categories": {
      "true": "common substring in elbow and knee",
      "false": "no common substring in elbow and knee",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "CommonSubstringInManAndWoman",
    "name": "man and woman are partially colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "common_substring_in_man_and_woman",
    "note": "",
    "categories": {
      "true": "common substring in man and woman",
      "false": "no common substring in man and woman",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "CommonSubstringInFearAndSurprise",
    "name": "fear and surprise are partially colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "common_substring_in_fear_and_surprise",
    "note": "",
    "categories": {
      "true": "common substring in fear and surprise",
      "false": "no common substring in fear and surprise",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "CommonSubstringInBoyAndGirl",
    "name": "boy and girl are partially colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "common_substring_in_boy_and_girl",
    "note": "",
    "categories": {
      "true": "common substring in boy and girl",
      "false": "no common substring in boy and girl",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "EyeInTear",
    "name": "eye partially colexified in tear",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_eye_in_tear",
    "note": "similar to: APICS 111",
    "categories": {
      "true": "eye partially colexified in tear",
      "false": "eye not partially colexified in tear",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "BowInElbow",
    "name": "bow partially colexified in elbow",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_bow_in_elbow",
    "note": "",
    "categories": {
      "true": "bow partially colexified in elbow",
      "false": "bow not partially colexified in elbow",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "CornerInElbow",
    "name": "corner partially colexified in elbow",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_corner_in_elbow",
    "note": "",
    "categories": {
      "true": "corner partially colexified in elbow",
      "false": "corner not partially colexified in elbow",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "WaterInTear",
    "name": "water partially colexified in tear",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_water_in_tear",
    "note": "similar to: APICS 111",
    "categories": {
      "true": "water partially colexified in tear",
      "false": "water not partially colexified in tear",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "TreeInBark",
    "name": "tree partially colexified in bark",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_tree_in_bark",
    "note": "",
    "categories": {
      "true": "tree partially colexified in bark",
      "false": "tree not partially colexified in bark",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "SkinInBark",
    "name": "skin partially colexified in bark",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_skin_in_bark",
    "note": "",
    "categories": {
      "true": "skin partially colexified in bark",
      "false": "skin not partially colexified in bark",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "MouthInLip",
    "name": "mouth partially colexified in lip",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_mouth_in_lip",
    "note": "",
    "categories": {
      "true": "mouth partially colexified in lip",
      "false": "mouth not partially colexified in lip",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "SkinInLip",
    "name": "skin partially colexified in lip",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_skin_in_lip",
    "note": "",
    "categories": {
      "true": "skin partially colexified in lip",
      "false": "skin not partially colexified in lip",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "HandInFinger",
    "name": "hand partially colexified in finger",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_hand_in_finger",
    "note": "",
    "categories": {
      "true": "hand partially colexified in finger",
      "false": "hand not partially colexified in finger",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "FootInToe",
    "name": "foot partially colexified in toe",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_foot_in_toe",
    "note": "",
    "categories": {
      "true": "foot partially colexified in toe",
      "false": "foot not partially colexified in toe",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "ThreeInEight",
    "name": "three partially colexified in eight",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_three_in_eight",
    "note": "",
    "categories": {
      "true": "three partially colexified in eight",
      "false": "three not partially colexified in eight",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "ThreeInThirteen",
    "name": "three partially colexified in thirteen",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_three_in_thirteen",
    "note": "",
    "categories": {
      "true": "three partially colexified in thirteen",
      "false": "three not partially colexified in thirteen",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "FingerAndToe",
    "name": "finger and toe colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_finger_and_toe",
    "note": "similar to: APICS 113",
    "categories": {
      "true": "finger and toe colexified",
      "false": "finger and toe not colexified",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "HairAndFeather",
    "name": "hair and feather colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_hair_and_feather_colexified",
    "note": "similar to: APICS 114",
    "categories": {
      "true": "hair and feather colexified",
      "false": "hair and feather not colexified",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "HearAndSmell",
    "name": "hear and smell colexified or not",
    "type": "bool",
    "module": "cltoolkit.features.lexicon",
    "function": "has_hear_and_smell_colexified",
    "note": "similar to: APICS 115",
    "categories": {
      "true": "hear and smell colexified",
      "false": "hear and smell not colexified",
      "null": "missing data"
    },
    "requires": "wordlist with forms"
  },
  {
    "id": "FirstPersonWithM",
    "name": "fist person starts with an m-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "first_person_with_m",
    "note": "similar to: WALS 136B",
    "categories": {
      "true": "first person starts with [m] or similar",
      "false": "first person starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "FirstPersonWithN",
    "name": "fist person starts with an n-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "first_person_with_n",
    "note": "see also: FirstPersonWithM, SecondPersonWithT, SecondPersonWithN, SecondPersonWithM",
    "categories": {
      "true": "first person starts with [n] or similar",
      "false": "first person starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "SecondPersonWithT",
    "name": "second person starts with a t-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "second_person_with_t",
    "note": "see also: FirstPersonWithM, FirstPersonWithN, SecondPersonWithN, SecondPersonWithM",
    "categories": {
      "true": "second person starts with [t] or similar",
      "false": "second person starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "SecondPersonWithM",
    "name": "second person starts with an m-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "second_person_with_m",
    "note": "see also: FirstPersonWithM, FirstPersonWithN, SecondPersonWithT, SecondPersonWithN",
    "categories": {
      "true": "second person starts with [n] or similar",
      "false": "second person starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "SecondPersonWithN",
    "name": "second person starts with an n-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "second_person_with_n",
    "note": "see also: FirstPersonWithM, FirstPersonWithN, SecondPersonWithT, SecondPersonWithM",
    "categories": {
      "true": "second person starts with [n] or similar",
      "false": "second person starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "MotherWithM",
    "name": "mother starts with m-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "mother_with_m",
    "note": "see also: FatherWithP",
    "categories": {
      "true": "mother starts with [m] or similar",
      "false": "mother starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "WindWithF",
    "name": "wind starts with f-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "wind_with_f",
    "note": "",
    "categories": {
      "true": "wind starts with [f] or similar",
      "false": "wind starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "HasPrenasalizedConsonants",
    "name": "inventory has pre-nasalized consonants",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "has_prenasalized_consonants",
    "note": "",
    "categories": {
      "true": "has pre-nasalized consonants",
      "false": "has no pre-nasalized consonants"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "HasLabiodentalFricatives",
    "name": "inventory has labio-dental fricatives or affricates",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "has_labiodental_fricative_consonants",
    "note": "",
    "categories": {
      "true": "has labio-dental fricatives",
      "false": "has no labio-dental fricatives"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "FatherWithP",
    "name": "father starts with p-sound",
    "type": "bool",
    "module": "cltoolkit.features.phonology",
    "function": "father_with_p",
    "note": "see also: MotherWithM",
    "categories": {
      "true": "father starts with [p] or similar",
      "false": "father starts with another sound",
      "null": "missing data"
    },
    "requires": "wordlist with segments"
  },
  {
    "id": "SyllableOnset",
    "name": "complexity of the syllable onset",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "syllable_onset",
    "note": "same as: APICS 118",
    "categories": {
      "1": "simple syllable onset (only CV attested)",
      "2": "moderately complex syllable onset (C(C)V attested)",
      "3": "complex syllable onset"
    },
    "requires": "wordlist with tokens"
  },
  {
    "id": "SyllableOffset",
    "name": "complexity of the syllable offset",
    "type": "categorical",
    "module": "cltoolkit.features.phonology",
    "function": "syllable_offset",
    "note": "same as: APICS 118",
    "categories": {
      "1": "simple syllable offset (only CV attested)",
      "2": "moderately complex syllable offset (CVC attested)",
      "3": "slightly complex syllable offset (CV(C)C attested)",
      "4": "complex syllable offset"
    },
    "requires": "wordlist with tokens"
  }


]
